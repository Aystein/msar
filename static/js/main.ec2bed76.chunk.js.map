{"version":3,"sources":["EnhancedTable.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","TableRow","headCell","TableCell","align","padding","sortDirection","TableSortLabel","active","direction","onClick","property","event","component","sx","visuallyHidden","EnhancedTable","rows","cellClick","React","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","max","length","width","mb","Paper","elevation","TableContainer","Table","minWidth","size","target","checked","newSelecteds","n","name","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","handleClick","role","tabIndex","scope","style","textOverflow","overflow","whiteSpace","artist","album","genres","join","height","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","createData","calories","fat","carbs","protein","App","useState","personName","setPersonName","currentSource","setCurrentSource","setGenres","setRows","filteredRows","setFilteredRows","useEffect","Papa","parse","download","skipEmptyLines","complete","results","result","data","forEach","push","JSON","replaceAll","genreSet","Set","genre","add","Array","from","r","find","e","youtube","filter","undefined","includes","className","FormControl","m","InputLabel","Select","multiple","onChange","input","OutlinedInput","renderValue","Box","display","flexWrap","gap","Chip","onMouseDown","stopPropagation","onDelete","newState","splice","handleDelete","MenuItem","disableRipple","Checkbox","ListItemText","primary","src","substr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec2bed76.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return {\r\n    name,\r\n    calories,\r\n    fat,\r\n    carbs,\r\n    protein,\r\n  };\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Name',\r\n  },\r\n  {\r\n    id: 'artist',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Artist',\r\n  },\r\n  {\r\n    id: 'album',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Album',\r\n  },\r\n  {\r\n    id: 'genres',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Genres'\r\n  }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n    props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding='normal'\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n        }),\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function EnhancedTable({ rows, cellClick }: { rows: any[], cellClick: (name: string) => void }) {\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState<any[]>([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    setSelected([name]);\r\n    cellClick(name)\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n    <Box sx={{ width: 'calc(100% - 64px)', mb: 2 }}>\r\n      <Paper sx={{ width: '100%' }} elevation={4}>\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            size={'small'}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 rows.slice().sort(getComparator(order, orderBy)) */}\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        style={{ width: 200 }}\r\n                      >\r\n                        <div style={{\r\n                          textOverflow: 'ellipsis',\r\n                          overflow: 'hidden',\r\n                          width: 200,\r\n                          whiteSpace: 'nowrap'\r\n                        }}>{row.name}</div>\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" style={{ width: 200 }}>\r\n                        <div style={{\r\n                          textOverflow: 'ellipsis',\r\n                          overflow: 'hidden',\r\n                          width: 200,\r\n                          whiteSpace: 'nowrap'\r\n                        }}>\r\n                          {row.artist}\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" style={{ width: 200 }}>                        <div style={{\r\n                          textOverflow: 'ellipsis',\r\n                          overflow: 'hidden',\r\n                          width: 200,\r\n                          whiteSpace: 'nowrap'\r\n                        }}>\r\n                          {row.album}\r\n                        </div></TableCell>\r\n                      <TableCell align=\"left\">{row.genres.join(', ')}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: 33 * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\nimport { Box } from '@mui/system';\nimport { Chip } from '@mui/material';\nimport Papa from 'papaparse';\nimport EnhancedTable from './EnhancedTable';\nimport { generateKeyPairSync } from 'crypto';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\n\nfunction createData(name: string, calories: number, fat: number, carbs: number, protein: number) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9)\n];\n\n\n\nfunction App() {\n  const [personName, setPersonName] = React.useState<string[]>([]);\n  const [currentSource, setCurrentSource] = React.useState(\"\")\n  const [genres, setGenres] = React.useState<string[]>([])\n\n  const [rows, setRows] = React.useState<any[]>([])\n  const [filteredRows, setFilteredRows] = React.useState<any[]>([])\n\n  React.useEffect(() => {\n    Papa.parse(\"predictions.csv\", {\n      download: true,\n      skipEmptyLines: true,\n      complete: function (results) {\n        const result = [] as any[]\n\n        results.data.forEach((row: any, index) => {\n          if (index !== 0) {\n            result.push({\n              id: row[0],\n              artist: row[1],\n              name: row[2],\n              album: row[3],\n              genres: JSON.parse(row[12].replaceAll('\\'', '\\\"'))\n            })\n          }\n        })\n\n        setRows(result)\n        setFilteredRows([...result])\n\n\n        Papa.parse(\"dev_tags.csv\", {\n          download: true,\n          skipEmptyLines: true,\n          complete: function (results) {\n            const genreSet = new Set<string>()\n\n            results.data.forEach((row: any, index) => {\n              if (index !== 0) {\n                const genreArray = JSON.parse(row[1].replaceAll('\\'', '\\\"'))\n                genreArray.forEach((genre) => genreSet.add(genre))\n\n                /**const r = result.find(e => e.id === row[0])\n                if (r) {\n                  r.genres = genreArray\n                } else {\n                  r.genres = []\n                }**/\n              }\n            })\n\n            setGenres(Array.from(genreSet))\n          }\n        });\n\n\n\n        Papa.parse(\"id_youtube.csv\", {\n          download: true,\n          skipEmptyLines: true,\n          complete: function (results) {\n            results.data.forEach((row: any, index) => {\n              if (index !== 0) {\n                const r = result.find(e => e.id === row[0])\n                if (r) r.youtube = row[1]\n              }\n            })\n          }\n        });\n      }\n    })\n  }, [])\n\n  const filter = (personName) => {\n    if (personName.length === 0) {\n      setFilteredRows(rows)\n    } else {\n      setFilteredRows(rows.filter((row) => {\n        return row.genres.find((genre) => personName.includes(genre)) !== undefined\n      }))\n    }\n  }\n\n  const handleChange = (event: SelectChangeEvent<string[]>) => {\n    setPersonName(event.target.value as string[])\n    filter(event.target.value)\n  };\n\n  const handleDelete = (genre) => {\n    const newState = [...personName]\n    newState.splice(newState.indexOf(genre), 1)\n    setPersonName(newState)\n    filter(newState)\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <FormControl sx={{ m: 2, width: 500 }}>\n          <InputLabel id=\"demo-multiple-checkbox-label\">Genres</InputLabel>\n          <Select\n            labelId=\"demo-multiple-checkbox-label\"\n            id=\"demo-multiple-checkbox\"\n            multiple\n            value={personName}\n            onChange={handleChange}\n            input={<OutlinedInput label=\"Genres\" />}\n            renderValue={(selected) => (\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                {selected.map((value) => (\n                  <Chip onMouseDown={(event) => {\n                    event.stopPropagation();\n                  }} key={value} label={value} onDelete={() => handleDelete(value)} />\n                ))}\n              </Box>\n            )}\n            MenuProps={MenuProps}\n          >\n            {genres.map((name) => (\n              <MenuItem disableRipple key={name} value={name}>\n                <Checkbox checked={personName.indexOf(name) > -1} />\n                <ListItemText primary={name} />\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <EnhancedTable\n          cellClick={(name) => {\n            const row = rows.find((row) => row.name === name)\n            setCurrentSource(row.youtube)\n          }}\n          key={filteredRows.length} rows={filteredRows} />\n\n        <iframe id=\"player\" width=\"640\" height=\"250\"\n          src={`http://www.youtube.com/embed/${currentSource.substr(32)}?enablejsapi=1&origin=http://example.com`}\n        >\n        </iframe>\n      </header>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}